Headers:
circle.h - header for Circle class, derivative of Shape, and related functions
consts.h - includes the constant template strings for drawing primitive shapes in postscript
horizontal.h - header for Horizontal class, derivative of Shape
layered.h - header for Layered class, derivative of Shape
polygon.h - header for Polygon class, derivative of Shape, and related functions
rectangle.h - header for Rectangle class, derivative of Shape
rotated.h - header for Rotated class, derivative of Shape
scaled.h - header for Scaled class, derivative of Shape
shape-writer.h - header for writePSfile function, which takes a vector of ShapePtr
                 and writes them to a filename specified by a string that is also
                 passed
shape.h - header for base Shape class, which outlines the methods and data members
          all Shape based classes must have
vertical.h - header for Vertical class, derivative of Shape


Source:
build.sh - shell script for compiling project files and main into an executable,
           simply a.out. Uses g++ and c++14.
circle.cpp - source file for Circle class and related functions
horizontal.cpp - source file for Horizontal class
layered.cpp - source file for Layered class
main.cpp - an entry point for making shapes and writing them to postscript
main - main3.ps - example files created by main.cpp
polygon.cpp - source file for Polygon class and related functions
rectangle.cpp - source file for Rectangle class
rotated.cpp - source file for Rotated class
scaled.cpp - source file for Scaled class
shape-writer.cpp - source file for writePSfile function
shape.cpp - source file for Shape class
vertical.cpp - source file for Vertical class

Tests:
make-tests.sh - shell script for compiling project files, testing files, and catch
                into an executable called tests.out
test-main.cpp - entry point for testing suite. main function is generated by catch
test-'name'.cpp - testing file for class specified by filename
test-'name'.ps - postscript file written by the corresponding testing program

Other Postscript files:
PSTest.ps is a pretty slick postscript file created by Jake via his CPS compiler
Other postscript are demonstrations of proper hypothetical output of each CPS class
See ReadMe PostScript_Samples

Other:
README.md - readme for github and navigation of other documentation
compileMain.cpp - entry point for Jake's CpsCompiler
CpsCompiler.cpp - source file for Jake's CpsCompiler and associated classes and functions
CpsCompiler.h - header file for Jake's CpsCompiler and associated classes and functions
myCPSProg.cps - example of an actual CPS language that can be processed by CpsCompiler
